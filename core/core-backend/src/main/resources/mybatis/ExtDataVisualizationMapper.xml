<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.dataease.visualization.dao.ext.mapper.ExtDataVisualizationMapper">
    <insert id="viewCopyWithDv">
        INSERT INTO `core_chart_view` (`id`,
                                       `title`,
                                       `scene_id`,
                                       `table_id`,
                                       `type`,
                                       `render`,
                                       `result_count`,
                                       `result_mode`,
                                       `x_axis`,
                                       `x_axis_ext`,
                                       `y_axis`,
                                       `y_axis_ext`,
                                       `ext_stack`,
                                       `ext_bubble`,
                                       `ext_label`,
                                       `ext_tooltip`,
                                       `custom_attr`,
                                       `custom_style`,
                                       `custom_filter`,
                                       `drill_fields`,
                                       `senior`,
                                       `create_by`,
                                       `create_time`,
                                       `update_time`,
                                       `snapshot`,
                                       `style_priority`,
                                       `chart_type`,
                                       `is_plugin`,
                                       `data_from`,
                                       `view_fields`,
                                       `refresh_view_enable`,
                                       `refresh_unit`,
                                       `refresh_time`,
                                       `linkage_active`,
                                       `jump_active`,
                                       `copy_from`,
                                       `copy_id`)
        SELECT core_chart_view.`id` + #{copyId} as id,
               `title`,
               #{newDvId} as 'scene_id', `table_id`,
               `type`,
               `render`,
               `result_count`,
               `result_mode`,
               `x_axis`,
               `x_axis_ext`,
               `y_axis`,
               `y_axis_ext`,
               `ext_stack`,
               `ext_bubble`,
               `ext_label`,
               `ext_tooltip`,
               `custom_attr`,
               `custom_style`,
               `custom_filter`,
               `drill_fields`,
               `senior`,
               `create_by`,
               `create_time`,
               `update_time`,
               `snapshot`,
               `style_priority`,
               `chart_type`,
               `is_plugin`,
               `data_from`,
               `view_fields`,
               `refresh_view_enable`,
               `refresh_unit`,
               `refresh_time`,
               `linkage_active`,
               `jump_active`,
               core_chart_view.`id` as 'copy_from',
                #{copyId} as 'copy_id'
        FROM core_chart_view
        WHERE core_chart_view.scene_id = #{sourceDvId}
    </insert>
    <insert id="dvCopy">
        INSERT INTO `data_visualization_info` (
            `id`,
            `name`,
            `pid`,
            `org_id`,
            `level`,
            `node_type`,
            `type`,
            `canvas_style_data`,
            `component_data`,
            `mobile_layout`,
            `status`,
            `self_watermark_status`,
            `sort`,
            `create_time`,
            `create_by`,
            `update_time`,
            `update_by`,
            `remark`,
            `source`,
            `delete_flag`,
            `delete_time`,
            `delete_by`
        )
        select  #{newDvId},
               `name`,
               `pid`,
               `org_id`,
               `level`,
               `node_type`,
               `type`,
               `canvas_style_data`,
               `component_data`,
               `mobile_layout`,
               `status`,
               `self_watermark_status`,
               `sort`,
               `create_time`,
               `create_by`,
               `update_time`,
               `update_by`,
               `remark`,
               `source`,
               `delete_flag`,
               `delete_time`,
               `delete_by`  from data_visualization_info dvInfo where dvInfo.id = #{sourceDvId}
    </insert>
    <select id="findViewInfoByCopyId" resultType="io.dataease.chart.dao.auto.entity.CoreChartView">
        select id, copy_from from core_chart_view where copy_id = #{copyId}
    </select>
    <select id="findDvInfo" resultType="io.dataease.api.visualization.vo.DataVisualizationVO">
        SELECT
            `id`,
            `name`,
            `pid`,
            `org_id`,
            `level`,
            `node_type`,
            `type`,
            `canvas_style_data`,
            `component_data`,
            `mobile_layout`,
            `status`,
            `self_watermark_status`,
            `sort`,
            `create_time`,
            `create_by`,
            (
                SELECT
                    per_user.account
                FROM
                    per_user
                WHERE
                    per_user.id = data_visualization_info.create_by
            ) AS creator_name,
            (
                SELECT
                    per_user.account
                FROM
                    per_user
                WHERE
                    per_user.id = data_visualization_info.update_by
            ) AS update_name,
            `update_time`,
            `update_by`,
            `remark`,
            `source`,
            `delete_flag`,
            `delete_time`,
            `delete_by`
        FROM
            data_visualization_info where data_visualization_info.delete_flag = 0 and  data_visualization_info.id = #{dvId} and  data_visualization_info.type = #{dvType}
    </select>

    <select id="findRecent" resultType="io.dataease.api.visualization.vo.VisualizationResourceVO">
        SELECT
        dvResource.*,
        (
        CASE WHEN core_store.resource_id is NULL THEN
        0 ELSE 1
        END
        ) AS favorite
        FROM
        (
        SELECT
        core_dataset_group.id,
        core_dataset_group.NAME,
        'dataset' AS type,
        core_dataset_group.create_by AS creator,
        core_dataset_group.update_by AS lastEditor,
        core_dataset_group.last_update_time AS lastEditTime
        FROM
        core_dataset_group
        WHERE
        core_dataset_group.node_type = 'dataset' UNION ALL
        SELECT
        core_datasource.id,
        core_datasource.NAME,
        'datasource' AS type,
        core_datasource.create_by AS creator,
        1 AS lastEditor,
        core_datasource.update_time AS lastEditTime
        FROM
        core_datasource
        WHERE
        core_datasource.type != 'folder' UNION ALL
        SELECT
        data_visualization_info.id,
        data_visualization_info.NAME,
        (
        CASE
        data_visualization_info.type
        WHEN 'dataV' THEN
        'screen' ELSE 'panel'
        END
        ) AS type,
        data_visualization_info.create_by AS creator,
        data_visualization_info.update_by AS lastEditor,
        data_visualization_info.update_time AS lastEditTime
        FROM
        data_visualization_info
        WHERE
        data_visualization_info.delete_flag = 0
        AND node_type = 'leaf'
        ) dvResource
        LEFT JOIN core_store ON dvResource.id = core_store.resource_id
        AND core_store.uid = #{uid}
        <where>
            dvResource.lastEditor =  #{uid}
            <if test="type != null and type != ''">
                and dvResource.type = #{type}
            </if>

            <if test="keyword != null and keyword != ''">
                and dvResource.name like concat('%', #{keyword}, '%')
            </if>
        </where>
        order by dvResource.lastEditTime asc LIMIT #{pageNum},#{pageCount}
    </select>

</mapper>
