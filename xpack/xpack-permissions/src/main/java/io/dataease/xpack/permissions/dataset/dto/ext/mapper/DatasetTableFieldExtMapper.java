package io.dataease.xpack.permissions.dataset.dto.ext.mapper;import com.baomidou.mybatisplus.core.mapper.BaseMapper;import io.dataease.dto.dataset.DatasetTableFieldDTO;import org.apache.ibatis.annotations.*;@Mapperpublic interface DatasetTableFieldExtMapper extends BaseMapper<DatasetTableFieldDTO> {    @Select("select  `id`,`datasource_id`,`dataset_table_id`, `dataset_group_id` ,`origin_name`,`name`,`description`,`dataease_name`,`field_short_name`,`group_type`,`type` ,`size`,`de_type`,`de_extract_type`," +            "`ext_field` ,`checked`,`column_index`,`last_sync_time`,`accuracy`,`date_format`,`date_format_type` from core_dataset_table_field where id = #{id} ")    @Results(            id = "selectDatasetTableFieldDTO",            value = {                    @Result(property = "id", column = "id"),                    @Result(property = "datasource_id", column = "datasourceId"),                    @Result(property = "dataset_table_id", column = "datasetTableId"),                    @Result(property = "dataset_group_id", column = "datasetGroupId"),                    @Result(property = "origin_name", column = "originName"),                    @Result(property = "name", column = "name"),                    @Result(property = "description", column = "description"),                    @Result(property = "dataease_name", column = "dataeaseName"),                    @Result(property = "field_short_name", column = "whiteListRole"),                    @Result(property = "group_type", column = "groupType"),                    @Result(property = "type", column = "type"),                    @Result(property = "size", column = "updateTime"),                    @Result(property = "de_type", column = "deType"),                    @Result(property = "de_extract_type", column = "deExtractType"),                    @Result(property = "ext_field", column = "extField"),                    @Result(property = "checked", column = "checked"),                    @Result(property = "column_index", column = "columnIndex"),                    @Result(property = "last_sync_time", column = "lastSyncTime"),                    @Result(property = "date_format", column = "dateFormat"),                    @Result(property = "date_format_type", column = "dateFormatType")            }    )    DatasetTableFieldDTO selectDatasetTableFieldDTO(@Param("id") Long id);}