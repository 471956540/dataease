package io.dataease.xpack.permissions.dataset.dto.ext.mapper;import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;import com.baomidou.mybatisplus.core.mapper.BaseMapper;import com.baomidou.mybatisplus.core.metadata.IPage;import io.dataease.api.permissions.dataset.dto.DataSetRowPermissionsTreeDTO;import org.apache.ibatis.annotations.*;@Mapperpublic interface RowPermissionsExtMapper extends BaseMapper<DataSetRowPermissionsTreeDTO> {    @Select(            """                         select *                     from per_dataset_row_permissions_tree                    ${ew.customSqlSegment}                     """    )    @Results(            id = "rowPermissionsMap",            value = {                    @Result(property = "id", column = "id"),                    @Result(property = "enable", column = "enable"),                    @Result(property = "auth_target_type", column = "authTargetType"),                    @Result(property = "auth_target_id", column = "authTargetId"),                    @Result(property = "dataset_id", column = "datasetId"),                    @Result(property = "expression_tree", column = "expressionTree"),                    @Result(property = "white_list_user", column = "whiteListUser"),                    @Result(property = "white_list_role", column = "whiteListRole"),                    @Result(property = "white_list_dept", column = "whiteListDept"),                    @Result(property = "update_time", column = "updateTime")            }    )    IPage<DataSetRowPermissionsTreeDTO> pager(IPage<DataSetRowPermissionsTreeDTO> page, @Param("ew") QueryWrapper queryWrapper);}